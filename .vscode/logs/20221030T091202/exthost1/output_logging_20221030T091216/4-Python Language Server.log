INFO:pygls.server:Starting IO server
INFO:pygls.feature_manager:Registered "textDocument/didOpen" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didChange" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didSave" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didClose" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/hover" with options "None"
INFO:pygls.protocol:Language server initialized work_done_token=None process_id=902 root_uri='file:///mnt/code' capabilities=ClientCapabilities(workspace=WorkspaceClientCapabilities(apply_edit=True, workspace_edit=WorkspaceEditClientCapabilities(document_changes=True, resource_operations=[<ResourceOperationKind.Create: 'create'>, <ResourceOperationKind.Rename: 'rename'>, <ResourceOperationKind.Delete: 'delete'>], failure_handling=<FailureHandlingKind.TextOnlyTransactional: 'textOnlyTransactional'>, normalizes_line_endings=True, change_annotation_support=ChangeAnnotationSupport(groups_on_label=True)), did_change_configuration=DidChangeConfigurationClientCapabilities(dynamic_registration=True), did_change_watched_files=DidChangeWatchedFilesClientCapabilities(dynamic_registration=True), symbol=WorkspaceSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>])), execute_command=ExecuteCommandClientCapabilities(dynamic_registration=True), workspace_folders=True, configuration=True, semantic_tokens=SemanticTokensWorkspaceClientCapabilities(refresh_support=True), code_lens=CodeLensWorkspaceClientCapabilities(refresh_support=True), file_operations=FileOperationsClientCapabilities(dynamic_registration=True, did_create=True, will_create=True, did_rename=True, will_rename=True, did_delete=True, will_delete=True)), text_document=TextDocumentClientCapabilities(synchronization=TextDocumentSyncClientCapabilities(dynamic_registration=True, will_save=True, will_save_wait_until=True, did_save=True), completion=CompletionClientCapabilities(dynamic_registration=True, completion_item=CompletionItemClientCapabilities(snippet_support=True, commit_characters_support=True, documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], deprecated_support=True, preselect_support=True, tag_support=CompletionTagSupportClientCapabilities(value_set=[<CompletionItemTag.Deprecated: 1>]), insert_replace_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['documentation', 'detail', 'additionalTextEdits']), insert_text_mode_support=InsertTextModeSupportClientCapabilities(value_set=[<InsertTextMode.AsIs: 1>, <InsertTextMode.AdjustIndentation: 2>])), completion_item_kind=CompletionItemKindClientCapabilities(value_set=[<CompletionItemKind.Text: 1>, <CompletionItemKind.Method: 2>, <CompletionItemKind.Function: 3>, <CompletionItemKind.Constructor: 4>, <CompletionItemKind.Field: 5>, <CompletionItemKind.Variable: 6>, <CompletionItemKind.Class: 7>, <CompletionItemKind.Interface: 8>, <CompletionItemKind.Module: 9>, <CompletionItemKind.Property: 10>, <CompletionItemKind.Unit: 11>, <CompletionItemKind.Value: 12>, <CompletionItemKind.Enum: 13>, <CompletionItemKind.Keyword: 14>, <CompletionItemKind.Snippet: 15>, <CompletionItemKind.Color: 16>, <CompletionItemKind.File: 17>, <CompletionItemKind.Reference: 18>, <CompletionItemKind.Folder: 19>, <CompletionItemKind.EnumMember: 20>, <CompletionItemKind.Constant: 21>, <CompletionItemKind.Struct: 22>, <CompletionItemKind.Event: 23>, <CompletionItemKind.Operator: 24>, <CompletionItemKind.TypeParameter: 25>]), context_support=True), hover=HoverClientCapabilities(dynamic_registration=True, content_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>]), signature_help=SignatureHelpClientCapabilities(dynamic_registration=True, signature_information=SignatureHelpInformationClientCapabilities(documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], parameter_information=SignatureHelpInformationParameterInformationClientCapabilities(label_offset_support=True), active_parameter_support=True), context_support=True), declaration=DeclarationClientCapabilities(dynamic_registration=True, link_support=True), definition=DefinitionClientCapabilities(dynamic_registration=True, link_support=True), type_definition=TypeDefinitionClientCapabilities(dynamic_registration=True, link_support=True), implementation=ImplementationClientCapabilities(dynamic_registration=True, link_support=True), references=ReferenceClientCapabilities(dynamic_registration=True), document_highlight=DocumentHighlightClientCapabilities(dynamic_registration=True), document_symbol=DocumentSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), hierarchical_document_symbol_support=True, tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>]), label_support=True), code_action=CodeActionClientCapabilities(dynamic_registration=True, code_action_literal_support=CodeActionLiteralSupportClientCapabilities(code_action_kind=CodeActionLiteralSupportActionKindClientCapabilities(value_set=['', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 'refactor.rewrite', 'source', 'source.organizeImports'])), is_preferred_support=True, disabled_support=True, data_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['edit']), honors_change_annotations=False), code_lens=CodeLensClientCapabilities(dynamic_registration=True), document_link=DocumentLinkClientCapabilities(dynamic_registration=True, tooltip_support=True), color_provider=DocumentColorClientCapabilities(dynamic_registration=True), formatting=DocumentFormattingClientCapabilities(dynamic_registration=True), range_formatting=DocumentRangeFormattingClientCapabilities(dynamic_registration=True), on_type_formatting=DocumentOnTypeFormattingClientCapabilities(dynamic_registration=True), rename=RenameClientCapabilities(dynamic_registration=True, prepare_support=True, prepare_support_default_behavior=<PrepareSupportDefaultBehavior.Identifier: 1>, honors_change_annotations=True), publish_diagnostics=PublishDiagnosticsClientCapabilities(related_information=True, tag_support=PublishDiagnosticsTagSupportClientCapabilities(value_set=[<DiagnosticTag.Unnecessary: 1>, <DiagnosticTag.Deprecated: 2>]), version_support=False, code_description_support=True, data_support=True), folding_range=FoldingRangeClientCapabilities(dynamic_registration=True, range_limit=5000, line_folding_only=True), selection_range=SelectionRangeClientCapabilities(dynamic_registration=True), linked_editing_range=LinkedEditingRangeClientCapabilities(dynamic_registration=True), call_hierarchy=CallHierarchyClientCapabilities(dynamic_registration=True), semantic_tokens=SemanticTokensClientCapabilities(requests=SemanticTokensRequests(range=True, full=SemanticTokensRequestsFull(delta=True)), token_types=['namespace', 'type', 'class', 'enum', 'interface', 'struct', 'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 'number', 'regexp', 'operator'], token_modifiers=['declaration', 'definition', 'readonly', 'static', 'deprecated', 'abstract', 'async', 'modification', 'documentation', 'defaultLibrary'], formats=[<TokenFormat.Relative: 'relative'>], overlapping_token_support=False, multiline_token_support=False, dynamic_registration=True), moniker=None), window=WindowClientCapabilities(work_done_progress=True, show_message=ShowMessageRequestClientCapabilities(message_action_item=ShowMessageRequestActionItem(additional_properties_support=True)), show_document=ShowDocumentClientCapabilities(support=True)), general=GeneralClientCapabilities(regular_expressions=RegularExpressionsClientCapabilities(engine='ECMAScript', version='ES2020'), markdown=MarkdownClientCapabilities(parser='marked', version='1.1.0')), experimental=None) client_info=ClientInfo(name='code-server', version='1.63.0') locale='en' root_path='/mnt/code' initialization_options={'markupKindPreferred': 'markdown', 'completion': {'resolveEagerly': False, 'disableSnippets': False}, 'diagnostics': {'enable': True, 'didOpen': True, 'didSave': True, 'didChange': True}, 'workspace': {'extraPaths': ['/mnt/code'], 'symbols': {'maxSymbols': 0}}} trace=<Trace.Off: 'off'> workspace_folders=[WorkspaceFolder(uri='file:///mnt/code', name='code')]
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 1, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 2, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 3, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 4, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 5, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 6, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 7, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 8, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 9, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 10, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 11, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 12, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 13, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 14, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 15, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 16, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 17, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 18, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 19, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 20, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 21, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 22, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 23, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 24, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "signup", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def signup", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 25, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 26, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 27, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 28, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 43}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "jls_extract_var = '/signup'\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 43}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return '/signup'\n\n\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 29, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 43}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "jls_extract_var = '/signup'\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 43}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return '/signup'\n\n\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 30, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 46}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "jls_extract_var = '/sub'\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 17}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 46}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return '/sub'\n\n\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 17}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 31, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 49}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "jls_extract_var = '/submit'\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 49}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return '/submit'\n\n\n"}, {"range": {"start": {"line": 59, "character": 11}, "end": {"line": 59, "character": 20}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 32, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "signup", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def signup", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 33, "result": {"contents": {"kind": "markdown", "value": "```python\nemail = request.form['email']\n```\n---\n**Full name:** `app.signup.email`"}, "range": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 34, "result": {"contents": {"kind": "markdown", "value": "```python\ndef signup()\n```\n---\n**Full name:** `app.signup`"}, "range": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 35, "result": [{"range": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 36, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 37, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 38, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 39, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 40, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 41, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 42, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 43, "result": {"contents": {"kind": "markdown", "value": "```python\nrequest: \"Request\" = LocalProxy(partial(_lookup_req_object, \"request\"))\n```\n---\n**Full name:** `flask.globals.request`"}, "range": {"start": {"line": 61, "character": 12}, "end": {"line": 61, "character": 19}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 44, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 45, "result": {"contents": {"kind": "markdown", "value": "```python\nrequest: \"Request\" = LocalProxy(partial(_lookup_req_object, \"request\"))\n```\n---\n**Full name:** `flask.globals.request`"}, "range": {"start": {"line": 61, "character": 12}, "end": {"line": 61, "character": 19}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 46, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 47, "result": {"contents": {"kind": "markdown", "value": "```python\ndef print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None\n```\n---\n```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```\n**Full name:** `builtins.print`"}, "range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 48, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 49, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 50, "result": {"contents": {"kind": "markdown", "value": "```python\nemail = request.form['email']\n```\n---\n**Full name:** `app.submit.email`"}, "range": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 51, "result": [{"range": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 9}}}, {"range": {"start": {"line": 62, "character": 37}, "end": {"line": 62, "character": 42}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 52, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 55}, "edits": [{"range": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 12}}, "newText": "print(\"The email address is '\" + ("}, {"range": {"start": {"line": 61, "character": 33}, "end": {"line": 62, "character": 10}}, "newText": ") + "}, {"range": {"start": {"line": 62, "character": 11}, "end": {"line": 62, "character": 32}}, "newText": ""}, {"range": {"start": {"line": 62, "character": 34}, "end": {"line": 62, "character": 48}}, "newText": ""}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 53, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 56}, "edits": [{"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_var = print\n    jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 56}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return print\n\n\n"}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 54, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 57}, "edits": [{"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_var = print\n    jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 57}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return print\n\n\n"}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 55, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 56, "result": {"contents": {"kind": "markdown", "value": "```python\ndef print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None\n```\n---\n```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```\n**Full name:** `builtins.print`"}, "range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 57, "result": {"contents": {"kind": "markdown", "value": "```python\ndef print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None\n```\n---\n```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```\n**Full name:** `builtins.print`"}, "range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 58, "result": {"contents": {"kind": "markdown", "value": "```python\ndef print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None\n```\n---\n```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```\n**Full name:** `builtins.print`"}, "range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 59, "result": [{"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 60, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 57}, "edits": [{"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_var = print\n    jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 57}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return print\n\n\n"}, {"range": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 9}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 61, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 62, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "newText": "jls_extract_var ="}, {"range": {"start": {"line": 63, "character": 24}, "end": {"line": 63, "character": 24}}, "newText": "\n    return jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return redirect('/')\n\n\n"}, {"range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 24}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 63, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 64, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 65, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 66, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 67, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "newText": "jls_extract_var ="}, {"range": {"start": {"line": 63, "character": 24}, "end": {"line": 63, "character": 24}}, "newText": "\n    return jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return redirect('/')\n\n\n"}, {"range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 24}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 68, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 69, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 70, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 71, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "newText": "jls_extract_var ="}, {"range": {"start": {"line": 63, "character": 24}, "end": {"line": 63, "character": 24}}, "newText": "\n    return jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return redirect('/')\n\n\n"}, {"range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 24}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 72, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 73, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 74, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "newText": "jls_extract_var ="}, {"range": {"start": {"line": 63, "character": 24}, "end": {"line": 63, "character": 24}}, "newText": "\n    return jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 59, "character": 0}, "end": {"line": 59, "character": 0}}, "newText": "def jls_extract_def():\n    return redirect('/')\n\n\n"}, {"range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 24}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 75, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 76, "result": {"contents": {"kind": "markdown", "value": "```python\nrandom_numbers = list(np.random.random(n))\n```\n---\n**Full name:** `app.random.random_numbers`"}, "range": {"start": {"line": 55, "character": 2}, "end": {"line": 55, "character": 16}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 77, "result": {"contents": {"kind": "markdown", "value": "```python\nclass list()\nclass list(iterable: Iterable[_T])\n```\n---\n```text\nBuilt-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\n```\n**Full name:** `builtins.list`"}, "range": {"start": {"line": 55, "character": 19}, "end": {"line": 55, "character": 23}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 78, "result": {"contents": {"kind": "markdown", "value": "```python\nrandom_numbers = list(np.random.random(n))\n```\n---\n**Full name:** `app.random.random_numbers`"}, "range": {"start": {"line": 56, "character": 20}, "end": {"line": 56, "character": 34}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 79, "result": {"contents": {"kind": "markdown", "value": "```python\ndef redirect(location, code: int=..., Response: None=...) -> Response\ndef redirect(location, code: int=..., Response: Type[_RC]=...) -> _RC\n```\n---\nReturns a response object (a WSGI application) that, if called,\nredirects the client to the target location. Supported codes are\n301, 302, 303, 305, 307, and 308. 300 is not supported because\nit's not a real redirect and 304 because it's the answer for a\nrequest with a request with defined If-Modified-Since headers.\n\n*Added in 0.6*\n   The location can now be a unicode string that is encoded using\n   the `iri_to_uri` function.\n\n*Added in 0.10*\n    The class used for the Response object can now be passed in.\n- `location`: the location the response should redirect to.\n- `code`: the redirect status code. defaults to 302.\n- `Response` (`class`): a Response class to use when instantiating a\n    response. The default is `werkzeug.wrappers.Response` if\n    unspecified.\n**Full name:** `werkzeug.utils.redirect`"}, "range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 19}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 80, "result": {"contents": {"kind": "markdown", "value": "```python\ndef redirect(location, code: int=..., Response: None=...) -> Response\ndef redirect(location, code: int=..., Response: Type[_RC]=...) -> _RC\n```\n---\nReturns a response object (a WSGI application) that, if called,\nredirects the client to the target location. Supported codes are\n301, 302, 303, 305, 307, and 308. 300 is not supported because\nit's not a real redirect and 304 because it's the answer for a\nrequest with a request with defined If-Modified-Since headers.\n\n*Added in 0.6*\n   The location can now be a unicode string that is encoded using\n   the `iri_to_uri` function.\n\n*Added in 0.10*\n    The class used for the Response object can now be passed in.\n- `location`: the location the response should redirect to.\n- `code`: the redirect status code. defaults to 302.\n- `Response` (`class`): a Response class to use when instantiating a\n    response. The default is `werkzeug.wrappers.Response` if\n    unspecified.\n**Full name:** `werkzeug.utils.redirect`"}, "range": {"start": {"line": 63, "character": 11}, "end": {"line": 63, "character": 19}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 81, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "def jls_extract_def(n):\n    random_numbers = list(np.random.random(n))\n    return json.dumps(random_numbers)\n\n\n"}, {"range": {"start": {"line": 55, "character": 3}, "end": {"line": 56, "character": 3}}, "newText": ""}, {"range": {"start": {"line": 56, "character": 10}, "end": {"line": 56, "character": 34}}, "newText": "ls_extract_def(n"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 82, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 59}, "edits": [{"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "def jls_extract_def(n):\n    random_numbers = list(np.random.random(n))\n    return json.dumps(random_numbers)\n\n\n"}, {"range": {"start": {"line": 55, "character": 3}, "end": {"line": 56, "character": 3}}, "newText": ""}, {"range": {"start": {"line": 56, "character": 10}, "end": {"line": 56, "character": 34}}, "newText": "ls_extract_def(n"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 83, "result": {"contents": {"kind": "markdown", "value": "```python\nrandom_numbers = list(np.random.random(n))\n```\n---\n**Full name:** `app.random.random_numbers`"}, "range": {"start": {"line": 55, "character": 2}, "end": {"line": 55, "character": 16}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 84, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 85, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 86, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 87, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 88, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 38, "character": 44}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 50, "character": 12}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 56, "character": 35}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 63, "character": 24}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 89, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 44}}, "selectionRange": {"start": {"line": 41, "character": 4}, "end": {"line": 41, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 54, "character": 12}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 58, "character": 0}, "end": {"line": 60, "character": 35}}, "selectionRange": {"start": {"line": 58, "character": 4}, "end": {"line": 58, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 67, "character": 24}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 90, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 91, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 44}}, "selectionRange": {"start": {"line": 41, "character": 4}, "end": {"line": 41, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 54, "character": 12}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 58, "character": 0}, "end": {"line": 60, "character": 35}}, "selectionRange": {"start": {"line": 58, "character": 4}, "end": {"line": 58, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 67, "character": 24}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 92, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 44}}, "selectionRange": {"start": {"line": 41, "character": 4}, "end": {"line": 41, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 54, "character": 12}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 58, "character": 0}, "end": {"line": 60, "character": 35}}, "selectionRange": {"start": {"line": 58, "character": 4}, "end": {"line": 58, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 67, "character": 24}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 93, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 94, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 55, "character": 12}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 59, "character": 0}, "end": {"line": 61, "character": 35}}, "selectionRange": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 65, "character": 0}, "end": {"line": 68, "character": 24}}, "selectionRange": {"start": {"line": 65, "character": 4}, "end": {"line": 65, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 95, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 55, "character": 12}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 59, "character": 0}, "end": {"line": 61, "character": 35}}, "selectionRange": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 65, "character": 0}, "end": {"line": 68, "character": 24}}, "selectionRange": {"start": {"line": 65, "character": 4}, "end": {"line": 65, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 96, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 97, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 55, "character": 12}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 59, "character": 0}, "end": {"line": 61, "character": 35}}, "selectionRange": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 65, "character": 0}, "end": {"line": 68, "character": 24}}, "selectionRange": {"start": {"line": 65, "character": 4}, "end": {"line": 65, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 98, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 99, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 55, "character": 12}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 59, "character": 0}, "end": {"line": 61, "character": 35}}, "selectionRange": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 65, "character": 0}, "end": {"line": 68, "character": 24}}, "selectionRange": {"start": {"line": 65, "character": 4}, "end": {"line": 65, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 100, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 43, "character": 0}, "end": {"line": 44, "character": 44}}, "selectionRange": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 48, "character": 0}, "end": {"line": 49, "character": 44}}, "selectionRange": {"start": {"line": 48, "character": 4}, "end": {"line": 48, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 53, "character": 0}, "end": {"line": 56, "character": 12}}, "selectionRange": {"start": {"line": 53, "character": 4}, "end": {"line": 53, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 62, "character": 35}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 66, "character": 0}, "end": {"line": 69, "character": 24}}, "selectionRange": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 101, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 102, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 78, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 103, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 155}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    \n    return \n\n\n"}, {"range": {"start": {"line": 78, "character": 1}, "end": {"line": 78, "character": 1}}, "newText": " = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 104, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 78, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 83, "character": 0}, "end": {"line": 84, "character": 44}}, "selectionRange": {"start": {"line": 83, "character": 4}, "end": {"line": 83, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 88, "character": 0}, "end": {"line": 89, "character": 44}}, "selectionRange": {"start": {"line": 88, "character": 4}, "end": {"line": 88, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 93, "character": 0}, "end": {"line": 96, "character": 12}}, "selectionRange": {"start": {"line": 93, "character": 4}, "end": {"line": 93, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 102, "character": 35}}, "selectionRange": {"start": {"line": 100, "character": 4}, "end": {"line": 100, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 106, "character": 0}, "end": {"line": 109, "character": 24}}, "selectionRange": {"start": {"line": 106, "character": 4}, "end": {"line": 106, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 105, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 79, "character": 1}}, "selectionRange": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 106, "result": {"isIncomplete": false, "items": [{"label": "set", "kind": 7, "sortText": "v00", "filterText": "set", "insertText": "set($0)", "insertTextFormat": 2}, {"label": "setattr", "kind": 3, "sortText": "v01", "filterText": "setattr", "insertText": "setattr(${1:object}, ${2:name}, ${3:value})$0", "insertTextFormat": 2}, {"label": "slice", "kind": 7, "sortText": "v02", "filterText": "slice", "insertText": "slice(${1:stop})$0", "insertTextFormat": 2}, {"label": "sorted", "kind": 3, "sortText": "v03", "filterText": "sorted", "insertText": "sorted(${1:iterable})$0", "insertTextFormat": 2}, {"label": "staticmethod", "kind": 7, "sortText": "v04", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}, {"label": "StopAsyncIteration", "kind": 7, "sortText": "v05", "filterText": "StopAsyncIteration", "insertText": "StopAsyncIteration($0)", "insertTextFormat": 2}, {"label": "StopIteration", "kind": 7, "sortText": "v06", "filterText": "StopIteration", "insertText": "StopIteration($0)", "insertTextFormat": 2}, {"label": "str", "kind": 7, "sortText": "v07", "filterText": "str", "insertText": "str($0)", "insertTextFormat": 2}, {"label": "subprocess", "kind": 9, "sortText": "v08", "filterText": "subprocess", "insertText": "subprocess", "insertTextFormat": 1}, {"label": "sum", "kind": 3, "sortText": "v09", "filterText": "sum", "insertText": "sum(${1:iterable})$0", "insertTextFormat": 2}, {"label": "super", "kind": 7, "sortText": "v10", "filterText": "super", "insertText": "super(${1:t}, ${2:obj})$0", "insertTextFormat": 2}, {"label": "SyntaxError", "kind": 7, "sortText": "v11", "filterText": "SyntaxError", "insertText": "SyntaxError($0)", "insertTextFormat": 2}, {"label": "SyntaxWarning", "kind": 7, "sortText": "v12", "filterText": "SyntaxWarning", "insertText": "SyntaxWarning($0)", "insertTextFormat": 2}, {"label": "SystemError", "kind": 7, "sortText": "v13", "filterText": "SystemError", "insertText": "SystemError($0)", "insertTextFormat": 2}, {"label": "SystemExit", "kind": 7, "sortText": "v14", "filterText": "SystemExit", "insertText": "SystemExit($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 107, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 157}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 1}}, "newText": "def jls_extract_def():\n    \n    return \n\n\ns = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 108, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 79, "character": 1}}, "selectionRange": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 109, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 159}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 3}}, "newText": "def jls_extract_def():\n    \n    return \n\n\nsch = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 110, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 160}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 4}}, "newText": "def jls_extract_def():\n    \n    return \n\n\nsche = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 111, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 79, "character": 1}}, "selectionRange": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 112, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 162}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "def jls_extract_def():\n    \n    return \n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 39, "character": 8}, "end": {"line": 40, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 39, "character": 9}, "end": {"line": 40, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 113, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 79, "character": 1}}, "selectionRange": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 114, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 166}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 11}, "end": {"line": 39, "character": 11}}, "newText": "\nschema = jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 166}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 8}}, "newText": "def jls_extract_def():\n    return"}, {"range": {"start": {"line": 39, "character": 11}, "end": {"line": 39, "character": 11}}, "newText": "\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 115, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 11}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = {}", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 79, "character": 1}}, "selectionRange": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "detail": "schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 116, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 166}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 11}, "end": {"line": 39, "character": 11}}, "newText": "\nschema = jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 166}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 8}}, "newText": "def jls_extract_def():\n    return"}, {"range": {"start": {"line": 39, "character": 11}, "end": {"line": 39, "character": 11}}, "newText": "\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 84, "character": 0}, "end": {"line": 84, "character": 3}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 117, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 118, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 84, "character": 0}, "end": {"line": 85, "character": 44}}, "selectionRange": {"start": {"line": 84, "character": 4}, "end": {"line": 84, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 89, "character": 0}, "end": {"line": 90, "character": 44}}, "selectionRange": {"start": {"line": 89, "character": 4}, "end": {"line": 89, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 97, "character": 12}}, "selectionRange": {"start": {"line": 94, "character": 4}, "end": {"line": 94, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 103, "character": 35}}, "selectionRange": {"start": {"line": 101, "character": 4}, "end": {"line": 101, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 107, "character": 0}, "end": {"line": 110, "character": 24}}, "selectionRange": {"start": {"line": 107, "character": 4}, "end": {"line": 107, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 84, "character": 0}, "end": {"line": 84, "character": 3}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 119, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 85, "character": 0}, "end": {"line": 85, "character": 3}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 120, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 121, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 122, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 80, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 123, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 124, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 41, "character": 9}}, "newText": ""}, {"range": {"start": {"line": 41, "character": 18}, "end": {"line": 41, "character": 18}}, "newText": "\nschema = {\nschema: {\n    type: jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 41, "character": 9}}, "newText": "def jls_extract_def():\n    return"}, {"range": {"start": {"line": 41, "character": 18}, "end": {"line": 41, "character": 18}}, "newText": "\n\n\nschema = {\nschema: {\n    type: jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 125, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 126, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 41, "character": 9}}, "newText": ""}, {"range": {"start": {"line": 41, "character": 18}, "end": {"line": 41, "character": 18}}, "newText": "\nschema = {\nschema: {\n    type: jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 41, "character": 9}}, "newText": "def jls_extract_def():\n    return"}, {"range": {"start": {"line": 41, "character": 18}, "end": {"line": 41, "character": 18}}, "newText": "\n\n\nschema = {\nschema: {\n    type: jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 127, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 9}, "end": {"line": 39, "character": 9}}, "newText": "schema\nschema = "}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return schema\n\n\n"}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 6}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 128, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "jls_extract_var = description\n"}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 19}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def(description):\n    return description\n\n\n"}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 19}}, "newText": "jls_extract_def(description)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 129, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "jls_extract_var = enum\n"}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 12}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def(enum):\n    return enum\n\n\n"}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 12}}, "newText": "jls_extract_def(enum)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 130, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 39, "character": 8}, "end": {"line": 40, "character": 7}}, "newText": ""}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "schema = {\nschema: jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 2}}, "newText": "def jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, "}, {"range": {"start": {"line": 39, "character": 4}, "end": {"line": 39, "character": 8}}, "newText": "ading, required, true):\n    return"}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 8}, "end": {"line": 56, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 1}, "end": {"line": 79, "character": 1}}, "newText": "\n\n\nschema = {\nschema: jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, heading, required, true)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 131, "result": {"contents": {"kind": "markdown", "value": "```python\ninstance dict\n```\n---\n```text\ndict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)\n```\n**Full name:** `builtins.dict`"}, "range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 132, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 2}}, "newText": "def jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, "}, {"range": {"start": {"line": 39, "character": 4}, "end": {"line": 39, "character": 8}}, "newText": "ading, required, true):\n    return"}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 8}, "end": {"line": 56, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 1}, "end": {"line": 80, "character": 1}}, "newText": "\n\n\nschema = jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, heading, required, true)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 133, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 134, "result": {"contents": {"kind": "markdown", "value": "```python\nschema = { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } }\n```\n---\n**Full name:** `app.schema`"}, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 135, "result": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 136, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 137, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 138, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 139, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 140, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 169}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 2}}, "newText": "def jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, "}, {"range": {"start": {"line": 39, "character": 4}, "end": {"line": 39, "character": 4}}, "newText": "ading, required, true):\n    sche"}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 8}, "end": {"line": 56, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    \n    return schema\n\n\nschema = jls_extract_def(properties, displaytype, title, enum, number, description, tflid, population, name, titles, items, heading, required, true)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 141, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore", "kind": 17, "sortText": "v02", "filterText": ".gitignore", "insertText": ".gitignore", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE", "kind": 17, "sortText": "v04", "filterText": "LICENSE", "insertText": "LICENSE", "insertTextFormat": 1}, {"label": "README.md", "kind": 17, "sortText": "v05", "filterText": "README.md", "insertText": "README.md", "insertTextFormat": 1}, {"label": "app.py", "kind": 17, "sortText": "v06", "filterText": "app.py", "insertText": "app.py", "insertTextFormat": 1}, {"label": "app.sh", "kind": 17, "sortText": "v07", "filterText": "app.sh", "insertText": "app.sh", "insertTextFormat": 1}, {"label": "example.html", "kind": 17, "sortText": "v08", "filterText": "example.html", "insertText": "example.html", "insertTextFormat": 1}, {"label": "index.html", "kind": 17, "sortText": "v09", "filterText": "index.html", "insertText": "index.html", "insertTextFormat": 1}, {"label": "package.json", "kind": 17, "sortText": "v10", "filterText": "package.json", "insertText": "package.json", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v11", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt", "kind": 17, "sortText": "v12", "filterText": "requirements.txt", "insertText": "requirements.txt", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v13", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v14", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v15", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v16", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 142, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 143, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 170}, "edits": [{"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 2}}, "newText": "jls_extract_var = \"\"\njls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 170}, "edits": [{"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 2}}, "newText": "def jls_extract_def():\n    return \"\"\n\n\njls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 144, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 80, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 145, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 146, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 147, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 80, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } }", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 81, "character": 0}, "end": {"line": 111, "character": 24}}, "message": "SyntaxError: EOF while scanning triple-quoted string literal", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 148, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore\"\"\"", "kind": 17, "sortText": "v02", "filterText": ".gitignore\"\"\"", "insertText": ".gitignore\"\"\"", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE\"\"\"", "kind": 17, "sortText": "v04", "filterText": "LICENSE\"\"\"", "insertText": "LICENSE\"\"\"", "insertTextFormat": 1}, {"label": "README.md\"\"\"", "kind": 17, "sortText": "v05", "filterText": "README.md\"\"\"", "insertText": "README.md\"\"\"", "insertTextFormat": 1}, {"label": "app.py\"\"\"", "kind": 17, "sortText": "v06", "filterText": "app.py\"\"\"", "insertText": "app.py\"\"\"", "insertTextFormat": 1}, {"label": "app.sh\"\"\"", "kind": 17, "sortText": "v07", "filterText": "app.sh\"\"\"", "insertText": "app.sh\"\"\"", "insertTextFormat": 1}, {"label": "example.html\"\"\"", "kind": 17, "sortText": "v08", "filterText": "example.html\"\"\"", "insertText": "example.html\"\"\"", "insertTextFormat": 1}, {"label": "index.html\"\"\"", "kind": 17, "sortText": "v09", "filterText": "index.html\"\"\"", "insertText": "index.html\"\"\"", "insertTextFormat": 1}, {"label": "package.json\"\"\"", "kind": 17, "sortText": "v10", "filterText": "package.json\"\"\"", "insertText": "package.json\"\"\"", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v11", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt\"\"\"", "kind": 17, "sortText": "v12", "filterText": "requirements.txt\"\"\"", "insertText": "requirements.txt\"\"\"", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v13", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v14", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v15", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v16", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 149, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 150, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 151, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 80, "character": 1}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } }", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 81, "character": 0}, "end": {"line": 111, "character": 24}}, "message": "SyntaxError: EOF while scanning triple-quoted string literal", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 152, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 153, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 154, "result": {"contents": {"kind": "markdown", "value": "```python\ninstance dict\n```\n---\n```text\ndict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)\n```\n**Full name:** `builtins.dict`"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 155, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 156, "result": {"contents": {"kind": "markdown", "value": "```python\ninstance dict\n```\n---\n```text\ndict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)\n```\n**Full name:** `builtins.dict`"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 157, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 39, "character": 9}, "end": {"line": 39, "character": 10}}, "message": "SyntaxError: EOL while scanning string literal", "severity": 1, "source": "jedi"}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 111, "character": 24}}, "message": "SyntaxError: EOF while scanning triple-quoted string literal", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 158, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore\"", "kind": 17, "sortText": "v02", "filterText": ".gitignore\"", "insertText": ".gitignore\"", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE\"", "kind": 17, "sortText": "v04", "filterText": "LICENSE\"", "insertText": "LICENSE\"", "insertTextFormat": 1}, {"label": "README.md\"", "kind": 17, "sortText": "v05", "filterText": "README.md\"", "insertText": "README.md\"", "insertTextFormat": 1}, {"label": "app.py\"", "kind": 17, "sortText": "v06", "filterText": "app.py\"", "insertText": "app.py\"", "insertTextFormat": 1}, {"label": "app.sh\"", "kind": 17, "sortText": "v07", "filterText": "app.sh\"", "insertText": "app.sh\"", "insertTextFormat": 1}, {"label": "example.html\"", "kind": 17, "sortText": "v08", "filterText": "example.html\"", "insertText": "example.html\"", "insertTextFormat": 1}, {"label": "index.html\"", "kind": 17, "sortText": "v09", "filterText": "index.html\"", "insertText": "index.html\"", "insertTextFormat": 1}, {"label": "package.json\"", "kind": 17, "sortText": "v10", "filterText": "package.json\"", "insertText": "package.json\"", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v11", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt\"", "kind": 17, "sortText": "v12", "filterText": "requirements.txt\"", "insertText": "requirements.txt\"", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v13", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v14", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v15", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v16", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 159, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 160, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 39, "character": 11}, "end": {"line": 39, "character": 12}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 111, "character": 24}}, "message": "SyntaxError: EOF while scanning triple-quoted string literal", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 161, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 162, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore\"\"\"", "kind": 17, "sortText": "v02", "filterText": ".gitignore\"\"\"", "insertText": ".gitignore\"\"\"", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE\"\"\"", "kind": 17, "sortText": "v04", "filterText": "LICENSE\"\"\"", "insertText": "LICENSE\"\"\"", "insertTextFormat": 1}, {"label": "README.md\"\"\"", "kind": 17, "sortText": "v05", "filterText": "README.md\"\"\"", "insertText": "README.md\"\"\"", "insertTextFormat": 1}, {"label": "app.py\"\"\"", "kind": 17, "sortText": "v06", "filterText": "app.py\"\"\"", "insertText": "app.py\"\"\"", "insertTextFormat": 1}, {"label": "app.sh\"\"\"", "kind": 17, "sortText": "v07", "filterText": "app.sh\"\"\"", "insertText": "app.sh\"\"\"", "insertTextFormat": 1}, {"label": "example.html\"\"\"", "kind": 17, "sortText": "v08", "filterText": "example.html\"\"\"", "insertText": "example.html\"\"\"", "insertTextFormat": 1}, {"label": "index.html\"\"\"", "kind": 17, "sortText": "v09", "filterText": "index.html\"\"\"", "insertText": "index.html\"\"\"", "insertTextFormat": 1}, {"label": "package.json\"\"\"", "kind": 17, "sortText": "v10", "filterText": "package.json\"\"\"", "insertText": "package.json\"\"\"", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v11", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt\"\"\"", "kind": 17, "sortText": "v12", "filterText": "requirements.txt\"\"\"", "insertText": "requirements.txt\"\"\"", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v13", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v14", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v15", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v16", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 163, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 164, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 175}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 175}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"{\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 39, "character": 12}}, "newText": ": "}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 165, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 81, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\"{ schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 166, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 176}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 176}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 8}}, "newText": "def jls_extract_def():\n    return"}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 40, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 167, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 81, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\".git/{ schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 168, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 180}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 180}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\".{\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 39, "character": 13}}, "newText": ": "}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 169, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 181}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 181}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"{\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 39, "character": 12}}, "newText": ": "}, {"range": {"start": {"line": 40, "character": 0}, "end": {"line": 41, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 6}, "end": {"line": 43, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 8}, "end": {"line": 44, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 0}, "end": {"line": 45, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 8}, "end": {"line": 46, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 6}, "end": {"line": 47, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 8}, "end": {"line": 49, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 0}, "end": {"line": 51, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 6}, "end": {"line": 52, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 8}, "end": {"line": 54, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 0}, "end": {"line": 55, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 6}, "end": {"line": 57, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 8}, "end": {"line": 59, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 0}, "end": {"line": 60, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 8}, "end": {"line": 61, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 0}, "end": {"line": 62, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 6}, "end": {"line": 63, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 8}, "end": {"line": 65, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 0}, "end": {"line": 67, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 10}, "end": {"line": 68, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 12}, "end": {"line": 70, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 14}, "end": {"line": 71, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 12}, "end": {"line": 74, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 10}, "end": {"line": 75, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 8}, "end": {"line": 76, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 6}, "end": {"line": 77, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 4}, "end": {"line": 78, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 0}, "end": {"line": 79, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 170, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 81, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\"{ schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 85, "character": 0}, "end": {"line": 86, "character": 44}}, "selectionRange": {"start": {"line": 85, "character": 4}, "end": {"line": 85, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 90, "character": 0}, "end": {"line": 91, "character": 44}}, "selectionRange": {"start": {"line": 90, "character": 4}, "end": {"line": 90, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 98, "character": 12}}, "selectionRange": {"start": {"line": 95, "character": 4}, "end": {"line": 95, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 102, "character": 0}, "end": {"line": 104, "character": 35}}, "selectionRange": {"start": {"line": 102, "character": 4}, "end": {"line": 102, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 108, "character": 0}, "end": {"line": 111, "character": 24}}, "selectionRange": {"start": {"line": 108, "character": 4}, "end": {"line": 108, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 171, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 172, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 173, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 174, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 175, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 176, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 177, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 178, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 179, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 180, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 181, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 182, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 183, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 184, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 185, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 182}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    "}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 186, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 187, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 183}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 183}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 188, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema: { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 189, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 190, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 191, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 192, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 183}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 183}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": ": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 193, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 194, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 184}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 184}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 195, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { type: \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 196, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 197, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 198, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 199, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 200, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 184}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 184}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 201, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 185}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 185}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 202, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", properties: { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 203, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 204, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 205, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 206, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 185}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 185}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 207, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 186}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 186}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 208, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { displaytype: { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 209, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 210, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 211, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 186}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 186}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 212, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 187}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 187}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 213, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 214, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { type: 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 215, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 216, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 187}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 187}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 217, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 218, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 188}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 188}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 219, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 220, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', title: 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 221, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 222, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 188}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 188}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 223, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 224, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 189}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 189}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 225, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', enum: [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 226, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 227, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 189}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 189}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 228, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 190}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 190}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 229, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, number: { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 230, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 231, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 232, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 190}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 190}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 233, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 191}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 191}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 234, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { type: 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 235, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 236, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 237, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 191}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 191}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 238, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 239, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 192}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 192}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 240, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', title: 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 241, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 242, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 243, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 192}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 192}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 244, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 193}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 193}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 245, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 246, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', description: \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 247, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 248, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 193}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 193}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 249, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 194}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 194}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 250, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, tflid: { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 251, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 252, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 253, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 194}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 194}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 254, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 255, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 195}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 195}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 256, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { type: 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 257, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 258, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 259, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 195}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 195}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 260, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 196}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 196}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 261, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 262, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', title: \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 263, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 196}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 196}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 264, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 265, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 266, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", description: \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 267, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 268, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 269, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 270, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 271, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 272, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 197}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 273, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 274, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 198}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 198}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 275, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, population: { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 276, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 277, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 278, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 198}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 198}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 279, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 280, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 199}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 199}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 281, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 282, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 283, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { name: \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 284, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 199}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 199}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 285, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 286, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 200}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 200}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 287, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 288, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", description: \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 289, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 201}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 201}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 290, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 291, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 201}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 201}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 292, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 293, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", type: \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 294, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 295, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 202}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 202}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 296, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 297, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", enum: [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 298, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 203}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 203}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 299, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, titles: { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 300, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 301, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 302, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 203}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 203}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 303, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 304, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 204}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 204}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 305, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 306, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { type: \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 307, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 308, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 205}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 205}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 309, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 310, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", items: { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 311, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 206}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 206}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 312, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { type: \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 313, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 314, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 315, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 206}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 206}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 316, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 317, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 207}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 207}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 318, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", title: \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 319, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 320, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 321, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 208}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 208}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 322, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", properties: { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 323, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 324, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 325, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 209}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 209}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 326, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 327, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 328, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { heading: { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 329, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 330, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 210}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 210}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 331, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { \"heading\": { type: \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 332, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 333, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 334, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 210}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 210}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 335, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 336, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 211}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 211}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 337, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { \"heading\": { \"type\": \"string\", title: \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 338, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 339, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 340, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 212}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 212}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 341, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 342, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { \"heading\": { \"type\": \"string\", \"title\": \"Heading\", required: true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 343, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 344, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 345, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { \"heading\": { \"type\": \"string\", \"title\": \"Heading\", \"required\": true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 346, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 347, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 348, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 349, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 350, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 351, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 352, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 353, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 354, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 355, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 356, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 357, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 358, "result": {"contents": {"kind": "markdown", "value": "```python\ndef render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text\n```\n---\n```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```\n**Full name:** `flask.templating.render_template`"}, "range": {"start": {"line": 87, "character": 15}, "end": {"line": 87, "character": 30}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 359, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 360, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 39, "character": 0}, "end": {"line": 82, "character": 3}}, "selectionRange": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "detail": "schema = \"\"\" { \"schema\": { \"type\": \"object\", \"properties\": { \"displaytype\": { \"type\": 'string', \"title\": 'Type', \"enum\": [\"Table\", \"Figure\", \"Listing\"] }, \"number\": { \"type\": 'string', \"title\": 'Table Number', \"description\": \"e.g. 13.01.01, etc.\" }, \"tflid\": { \"type\": 'string', \"title\": \"TFL.ID\", \"description\": \"Unique TFL identifier, e.g. t_dem1, f_eDISH, etc.\" }, \"population\": { \"name\": \"Population\", \"description\": \"Population as defined in SAP\", \"type\": \"string\", \"enum\": [\"Safety\", \"Efficacy\", \"Intent to Treat\", \"All Subjects\", \"Other\"] }, \"titles\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"title\": \"Title\", \"properties\": { \"heading\": { \"type\": \"string\", \"title\": \"Heading\", \"required\": true } } } } } } } \"\"\"", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 86, "character": 0}, "end": {"line": 87, "character": 44}}, "selectionRange": {"start": {"line": 86, "character": 4}, "end": {"line": 86, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 91, "character": 0}, "end": {"line": 92, "character": 44}}, "selectionRange": {"start": {"line": 91, "character": 4}, "end": {"line": 91, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 99, "character": 12}}, "selectionRange": {"start": {"line": 96, "character": 4}, "end": {"line": 96, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 105, "character": 35}}, "selectionRange": {"start": {"line": 103, "character": 4}, "end": {"line": 103, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 112, "character": 24}}, "selectionRange": {"start": {"line": 109, "character": 4}, "end": {"line": 109, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 361, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 362, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 363, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 6}}, "newText": "jls_extract_var"}, {"range": {"start": {"line": 83, "character": 0}, "end": {"line": 83, "character": 0}}, "newText": "schema = jls_extract_var\n"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 213}, "edits": [{"range": {"start": {"line": 39, "character": 0}, "end": {"line": 39, "character": 0}}, "newText": "def jls_extract_def():\n    return \"\"\"\n    {\n    \""}, {"range": {"start": {"line": 39, "character": 6}, "end": {"line": 40, "character": 0}}, "newText": "\": "}, {"range": {"start": {"line": 41, "character": 0}, "end": {"line": 42, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 44, "character": 6}, "end": {"line": 44, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 45, "character": 8}, "end": {"line": 45, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 46, "character": 0}, "end": {"line": 46, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 47, "character": 8}, "end": {"line": 47, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 48, "character": 6}, "end": {"line": 48, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 49, "character": 6}, "end": {"line": 49, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 50, "character": 8}, "end": {"line": 50, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 51, "character": 8}, "end": {"line": 51, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 52, "character": 0}, "end": {"line": 52, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 53, "character": 6}, "end": {"line": 53, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 54, "character": 6}, "end": {"line": 54, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 55, "character": 8}, "end": {"line": 55, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 56, "character": 0}, "end": {"line": 56, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 57, "character": 0}, "end": {"line": 57, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 58, "character": 6}, "end": {"line": 58, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 59, "character": 6}, "end": {"line": 59, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 60, "character": 8}, "end": {"line": 60, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 61, "character": 0}, "end": {"line": 61, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 62, "character": 8}, "end": {"line": 62, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 63, "character": 0}, "end": {"line": 63, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 64, "character": 6}, "end": {"line": 64, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 65, "character": 6}, "end": {"line": 65, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 66, "character": 8}, "end": {"line": 66, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 67, "character": 8}, "end": {"line": 67, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 69, "character": 10}, "end": {"line": 69, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 70, "character": 10}, "end": {"line": 70, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 71, "character": 12}, "end": {"line": 71, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 72, "character": 14}, "end": {"line": 72, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 73, "character": 14}, "end": {"line": 73, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 74, "character": 14}, "end": {"line": 74, "character": 14}}, "newText": "    "}, {"range": {"start": {"line": 75, "character": 12}, "end": {"line": 75, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 76, "character": 10}, "end": {"line": 76, "character": 10}}, "newText": "    "}, {"range": {"start": {"line": 77, "character": 8}, "end": {"line": 77, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 78, "character": 6}, "end": {"line": 78, "character": 6}}, "newText": "    "}, {"range": {"start": {"line": 79, "character": 4}, "end": {"line": 79, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 80, "character": 0}, "end": {"line": 80, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 81, "character": 0}, "end": {"line": 81, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 82, "character": 0}, "end": {"line": 82, "character": 3}}, "newText": "    \"\"\"\n\n\nschema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 364, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 365, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 43, "character": 0}, "end": {"line": 44, "character": 44}}, "selectionRange": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 48, "character": 0}, "end": {"line": 49, "character": 44}}, "selectionRange": {"start": {"line": 48, "character": 4}, "end": {"line": 48, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 53, "character": 0}, "end": {"line": 56, "character": 12}}, "selectionRange": {"start": {"line": 53, "character": 4}, "end": {"line": 53, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 62, "character": 35}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 66, "character": 0}, "end": {"line": 69, "character": 24}}, "selectionRange": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 366, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 42, "character": 0}, "end": {"line": 43, "character": 44}}, "selectionRange": {"start": {"line": 42, "character": 4}, "end": {"line": 42, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 55, "character": 12}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 59, "character": 0}, "end": {"line": 61, "character": 35}}, "selectionRange": {"start": {"line": 59, "character": 4}, "end": {"line": 59, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 65, "character": 0}, "end": {"line": 68, "character": 24}}, "selectionRange": {"start": {"line": 65, "character": 4}, "end": {"line": 65, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 367, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 368, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 369, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 43, "character": 0}, "end": {"line": 44, "character": 44}}, "selectionRange": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 48, "character": 0}, "end": {"line": 49, "character": 44}}, "selectionRange": {"start": {"line": 48, "character": 4}, "end": {"line": 48, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 53, "character": 0}, "end": {"line": 56, "character": 12}}, "selectionRange": {"start": {"line": 53, "character": 4}, "end": {"line": 53, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 62, "character": 35}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 66, "character": 0}, "end": {"line": 69, "character": 24}}, "selectionRange": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 370, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 371, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 372, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 373, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 374, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 375, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 376, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 377, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 43, "character": 0}, "end": {"line": 44, "character": 44}}, "selectionRange": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 48, "character": 0}, "end": {"line": 49, "character": 44}}, "selectionRange": {"start": {"line": 48, "character": 4}, "end": {"line": 48, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 53, "character": 0}, "end": {"line": 56, "character": 12}}, "selectionRange": {"start": {"line": 53, "character": 4}, "end": {"line": 53, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 62, "character": 35}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 66, "character": 0}, "end": {"line": 69, "character": 24}}, "selectionRange": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 378, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 379, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 380, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 381, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 382, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 383, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 384, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 43, "character": 0}, "end": {"line": 44, "character": 44}}, "selectionRange": {"start": {"line": 43, "character": 4}, "end": {"line": 43, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 48, "character": 0}, "end": {"line": 49, "character": 44}}, "selectionRange": {"start": {"line": 48, "character": 4}, "end": {"line": 48, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 53, "character": 0}, "end": {"line": 56, "character": 12}}, "selectionRange": {"start": {"line": 53, "character": 4}, "end": {"line": 53, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 60, "character": 0}, "end": {"line": 62, "character": 35}}, "selectionRange": {"start": {"line": 60, "character": 4}, "end": {"line": 60, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 66, "character": 0}, "end": {"line": 69, "character": 24}}, "selectionRange": {"start": {"line": 66, "character": 4}, "end": {"line": 66, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 385, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 386, "result": {"isIncomplete": false, "items": [{"label": "Warning", "kind": 7, "sortText": "v0", "filterText": "Warning", "insertText": "Warning($0)", "insertTextFormat": 2}, {"label": "while", "kind": 14, "sortText": "v1", "filterText": "while", "insertText": "while", "insertTextFormat": 1}, {"label": "WindowsError", "kind": 7, "sortText": "v2", "filterText": "WindowsError", "insertText": "WindowsError($0)", "insertTextFormat": 2}, {"label": "with", "kind": 14, "sortText": "v3", "filterText": "with", "insertText": "with", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 4}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 5}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 387, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 5}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 6}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 388, "result": {"isIncomplete": false, "items": [{"label": "object", "kind": 7, "sortText": "v0", "filterText": "object", "insertText": "object()$0", "insertTextFormat": 2}, {"label": "oct", "kind": 3, "sortText": "v1", "filterText": "oct", "insertText": "oct(${1:i})$0", "insertTextFormat": 2}, {"label": "open", "kind": 3, "sortText": "v2", "filterText": "open", "insertText": "open(${1:file})$0", "insertTextFormat": 2}, {"label": "ord", "kind": 3, "sortText": "v3", "filterText": "ord", "insertText": "ord(${1:c})$0", "insertTextFormat": 2}, {"label": "OSError", "kind": 7, "sortText": "v4", "filterText": "OSError", "insertText": "OSError($0)", "insertTextFormat": 2}, {"label": "OverflowError", "kind": 7, "sortText": "v5", "filterText": "OverflowError", "insertText": "OverflowError($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 7}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 8}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 389, "result": {"label": "open", "kind": 3, "detail": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "sortText": "v2", "filterText": "open", "insertText": "open(${1:file})$0", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 9}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 390, "result": {"label": "open", "kind": 3, "detail": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "sortText": "v2", "filterText": "open", "insertText": "open(${1:file})$0", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 391, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 392, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 11}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 393, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 394, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 395, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 13}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 396, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore", "kind": 17, "sortText": "v02", "filterText": ".gitignore", "insertText": ".gitignore", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE", "kind": 17, "sortText": "v04", "filterText": "LICENSE", "insertText": "LICENSE", "insertTextFormat": 1}, {"label": "README.md", "kind": 17, "sortText": "v05", "filterText": "README.md", "insertText": "README.md", "insertTextFormat": 1}, {"label": "app.py", "kind": 17, "sortText": "v06", "filterText": "app.py", "insertText": "app.py", "insertTextFormat": 1}, {"label": "app.sh", "kind": 17, "sortText": "v07", "filterText": "app.sh", "insertText": "app.sh", "insertTextFormat": 1}, {"label": "example.html", "kind": 17, "sortText": "v08", "filterText": "example.html", "insertText": "example.html", "insertTextFormat": 1}, {"label": "forms/", "kind": 17, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}, {"label": "index.html", "kind": 17, "sortText": "v10", "filterText": "index.html", "insertText": "index.html", "insertTextFormat": 1}, {"label": "package.json", "kind": 17, "sortText": "v11", "filterText": "package.json", "insertText": "package.json", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v12", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt", "kind": 17, "sortText": "v13", "filterText": "requirements.txt", "insertText": "requirements.txt", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v14", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v15", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v16", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v17", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 13}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 397, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 398, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 399, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 400, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 13}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 14}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 401, "result": {"label": "forms/", "kind": 17, "detail": "path forms/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 15}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 402, "result": {"label": "forms/", "kind": 17, "detail": "path forms/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 16}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 403, "result": {"label": "forms/", "kind": 17, "detail": "path forms/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 404, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 17}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 405, "result": {"label": "forms/", "kind": 17, "detail": "path forms/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 406, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 407, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 18}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 408, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 409, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 410, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 19}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 411, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 412, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 413, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 19}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 20}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 414, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 21}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 22}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 415, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 23}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 24}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 416, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 417, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 25}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 418, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 419, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 420, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 26}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 421, "result": {"isIncomplete": false, "items": [{"label": "titles.schema.json", "kind": 17, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 422, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 423, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 424, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 425, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 27}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 426, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 28}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 427, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 29}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 30}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 428, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 31}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 429, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 32}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 430, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 431, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 33}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 432, "result": {"isIncomplete": false, "items": [{"label": "titles.schema.json", "kind": 17, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 433, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 434, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 435, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 34}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 436, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 35}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 437, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 36}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 438, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 439, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 37}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 440, "result": {"label": "titles.schema.json", "kind": 17, "detail": "path titles.schema.json", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v0", "filterText": "titles.schema.json", "insertText": "titles.schema.json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 441, "result": {"signatures": [{"label": "def open(file: Union[str, bytes, int], mode: str=..., buffering: int=..., encoding: Optional[str]=..., errors: Optional[str]=..., newline: Optional[str]=..., closefd: bool=..., opener: Optional[Callable[[str, int], int]]=...) -> IO[Any]", "documentation": {"kind": "markdown", "value": "```text\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getpreferredencoding(False) is called to get the\ncurrent locale encoding. (For reading and writing raw bytes use binary\nmode and leave encoding unspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n'U'       universal newline mode (deprecated)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\n'U' mode is deprecated and will raise an exception in future versions\nof Python.  It has no effect in Python 3.  Use newline to control\nuniversal newlines mode.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  \"block size\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* \"Interactive\" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\\n', '\\r', and '\\r\\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\\n', '\\r', or '\\r\\n', and\n  these are translated into '\\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\\n', no translation takes place. If newline is any\n  of the other legal values, any '\\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.\n```"}, "parameters": [{"label": "file: Union[str, bytes, int]"}, {"label": "mode: str=..."}, {"label": "buffering: int=..."}, {"label": "encoding: Optional[str]=..."}, {"label": "errors: Optional[str]=..."}, {"label": "newline: Optional[str]=..."}, {"label": "closefd: bool=..."}, {"label": "opener: Optional[Callable[[str, int], int]]=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 442, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 443, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 37}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 444, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 445, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 38}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 38}, "end": {"line": 40, "character": 39}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 446, "result": {"isIncomplete": false, "items": [{"label": "and", "kind": 14, "sortText": "v0", "filterText": "and", "insertText": "and", "insertTextFormat": 1}, {"label": "as", "kind": 14, "sortText": "v1", "filterText": "as", "insertText": "as", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 40}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 41}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 447, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 40, "character": 42}, "end": {"line": 41, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 448, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 449, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 43, "character": 0}, "end": {"line": 43, "character": 0}}, "message": "IndentationError: expected an indented block", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 450, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 43, "character": 0}, "end": {"line": 43, "character": 0}}, "message": "IndentationError: expected an indented block", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 451, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 44, "character": 0}, "end": {"line": 45, "character": 44}}, "selectionRange": {"start": {"line": 44, "character": 4}, "end": {"line": 44, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 49, "character": 0}, "end": {"line": 50, "character": 44}}, "selectionRange": {"start": {"line": 49, "character": 4}, "end": {"line": 49, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 54, "character": 0}, "end": {"line": 57, "character": 12}}, "selectionRange": {"start": {"line": 54, "character": 4}, "end": {"line": 54, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 61, "character": 0}, "end": {"line": 63, "character": 35}}, "selectionRange": {"start": {"line": 61, "character": 4}, "end": {"line": 61, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 70, "character": 24}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 44, "character": 0}, "end": {"line": 44, "character": 0}}, "message": "IndentationError: expected an indented block", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 452, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 44, "character": 0}, "end": {"line": 44, "character": 0}}, "message": "IndentationError: expected an indented block", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 453, "result": {"isIncomplete": false, "items": [{"label": "set", "kind": 7, "sortText": "v00", "filterText": "set", "insertText": "set($0)", "insertTextFormat": 2}, {"label": "setattr", "kind": 3, "sortText": "v01", "filterText": "setattr", "insertText": "setattr(${1:object}, ${2:name}, ${3:value})$0", "insertTextFormat": 2}, {"label": "slice", "kind": 7, "sortText": "v02", "filterText": "slice", "insertText": "slice(${1:stop})$0", "insertTextFormat": 2}, {"label": "sorted", "kind": 3, "sortText": "v03", "filterText": "sorted", "insertText": "sorted(${1:iterable})$0", "insertTextFormat": 2}, {"label": "staticmethod", "kind": 7, "sortText": "v04", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}, {"label": "StopAsyncIteration", "kind": 7, "sortText": "v05", "filterText": "StopAsyncIteration", "insertText": "StopAsyncIteration($0)", "insertTextFormat": 2}, {"label": "StopIteration", "kind": 7, "sortText": "v06", "filterText": "StopIteration", "insertText": "StopIteration($0)", "insertTextFormat": 2}, {"label": "str", "kind": 7, "sortText": "v07", "filterText": "str", "insertText": "str($0)", "insertTextFormat": 2}, {"label": "subprocess", "kind": 9, "sortText": "v08", "filterText": "subprocess", "insertText": "subprocess", "insertTextFormat": 1}, {"label": "sum", "kind": 3, "sortText": "v09", "filterText": "sum", "insertText": "sum(${1:iterable})$0", "insertTextFormat": 2}, {"label": "super", "kind": 7, "sortText": "v10", "filterText": "super", "insertText": "super(${1:t}, ${2:obj})$0", "insertTextFormat": 2}, {"label": "SyntaxError", "kind": 7, "sortText": "v11", "filterText": "SyntaxError", "insertText": "SyntaxError($0)", "insertTextFormat": 2}, {"label": "SyntaxWarning", "kind": 7, "sortText": "v12", "filterText": "SyntaxWarning", "insertText": "SyntaxWarning($0)", "insertTextFormat": 2}, {"label": "SystemError", "kind": 7, "sortText": "v13", "filterText": "SystemError", "insertText": "SystemError($0)", "insertTextFormat": 2}, {"label": "SystemExit", "kind": 7, "sortText": "v14", "filterText": "SystemExit", "insertText": "SystemExit($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 454, "result": {"label": "staticmethod", "kind": 7, "detail": "class staticmethod(f: Callable[..., Any])", "documentation": {"kind": "markdown", "value": "```text\nstaticmethod(function) -> method\n\nConvert a function to be a static method.\n\nA static method does not receive an implicit first argument.\nTo declare a static method, use this idiom:\n\n     class C:\n         @staticmethod\n         def f(arg1, arg2, ...):\n             ...\n\nIt can be called either on the class (e.g. C.f()) or on an instance\n(e.g. C().f()). Both the class and the instance are ignored, and\nneither is passed implicitly as the first argument to the method.\n\nStatic methods in Python are similar to those found in Java or C++.\nFor a more advanced concept, see the classmethod builtin.\n```"}, "sortText": "v04", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 455, "result": {"label": "staticmethod", "kind": 7, "detail": "class staticmethod(f: Callable[..., Any])", "documentation": {"kind": "markdown", "value": "```text\nstaticmethod(function) -> method\n\nConvert a function to be a static method.\n\nA static method does not receive an implicit first argument.\nTo declare a static method, use this idiom:\n\n     class C:\n         @staticmethod\n         def f(arg1, arg2, ...):\n             ...\n\nIt can be called either on the class (e.g. C.f()) or on an instance\n(e.g. C().f()). Both the class and the instance are ignored, and\nneither is passed implicitly as the first argument to the method.\n\nStatic methods in Python are similar to those found in Java or C++.\nFor a more advanced concept, see the classmethod builtin.\n```"}, "sortText": "v04", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 456, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 457, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 271}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  schema = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 458, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 41, "character": 10}, "end": {"line": 42, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 41, "character": 11}, "end": {"line": 42, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 459, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema =", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 460, "result": {"isIncomplete": false, "items": [{"label": "json", "kind": 9, "sortText": "v0", "filterText": "json", "insertText": "json", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 461, "result": {"label": "json", "kind": 9, "detail": "module json", "documentation": {"kind": "markdown", "value": "JSON (JavaScript Object Notation) <http://json.org> is a subset of\nJavaScript syntax (ECMA-262 3rd edition) used as a lightweight data\ninterchange format.\n\n`json` exposes an API familiar to users of the standard library\n`marshal` and `pickle` modules.  It is derived from a\nversion of the externally maintained simplejson library.\n\nEncoding basic Python object hierarchies\n\n```python\n>>> import json\n>>> json.dumps(['foo', {'bar': ('baz', None, 1.0, 2)}])\n'[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]'\n>>> print(json.dumps(\"\\\"foo\\bar\"))\n\"\\\"foo\\bar\"\n>>> print(json.dumps('\\u1234'))\n\"\\u1234\"\n>>> print(json.dumps('\\\\'))\n\"\\\\\"\n>>> print(json.dumps({\"c\": 0, \"b\": 0, \"a\": 0}, sort_keys=True))\n{\"a\": 0, \"b\": 0, \"c\": 0}\n>>> from io import StringIO\n>>> io = StringIO()\n>>> json.dump(['streaming API'], io)\n>>> io.getvalue()\n'[\"streaming API\"]'\n```\n\nCompact encoding\n\n```python\n>>> import json\n>>> mydict = {'4': 5, '6': 7}\n>>> json.dumps([1,2,3,mydict], separators=(',', ':'))\n'[1,2,3,{\"4\":5,\"6\":7}]'\n```\n\nPretty printing\n\n```python\n>>> import json\n>>> print(json.dumps({'4': 5, '6': 7}, sort_keys=True, indent=4))\n{\n    \"4\": 5,\n    \"6\": 7\n}\n```\n\nDecoding JSON\n\n```python\n>>> import json\n>>> obj = ['foo', {'bar': ['baz', None, 1.0, 2]}]\n>>> json.loads('[\"foo\", {\"bar\":[\"baz\", null, 1.0, 2]}]') == obj\nTrue\n>>> json.loads('\"\\\\\"foo\\\\bar\"') == '\"foo\\x08ar'\nTrue\n>>> from io import StringIO\n>>> io = StringIO('[\"streaming API\"]')\n>>> json.load(io)[0] == 'streaming API'\nTrue\n```\n\nSpecializing JSON object decoding\n\n```python\n>>> import json\n>>> def as_complex(dct):\n...     if '__complex__' in dct:\n...         return complex(dct['real'], dct['imag'])\n...     return dct\n...\n>>> json.loads('{\"__complex__\": true, \"real\": 1, \"imag\": 2}',\n...     object_hook=as_complex)\n(1+2j)\n>>> from decimal import Decimal\n>>> json.loads('1.1', parse_float=Decimal) == Decimal('1.1')\nTrue\n```\n\nSpecializing JSON object encoding\n\n```python\n>>> import json\n>>> def encode_complex(obj):\n...     if isinstance(obj, complex):\n...         return [obj.real, obj.imag]\n...     raise TypeError(f'Object of type {obj.__class__.__name__} '\n...                     f'is not JSON serializable')\n...\n>>> json.dumps(2 + 1j, default=encode_complex)\n'[2.0, 1.0]'\n>>> json.JSONEncoder(default=encode_complex).encode(2 + 1j)\n'[2.0, 1.0]'\n>>> ''.join(json.JSONEncoder(default=encode_complex).iterencode(2 + 1j))\n'[2.0, 1.0]'\n\n```\n\nUsing json.tool from the shell to validate and pretty-print\n\n```python\n$ echo '{\"json\":\"obj\"}' | python -m json.tool\n{\n    \"json\": \"obj\"\n}\n$ echo '{ 1.2:3.4}' | python -m json.tool\nExpecting property name enclosed in double quotes: line 1 column 3 (char 2)\n```"}, "sortText": "v0", "filterText": "json", "insertText": "json", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 462, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 278}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 2}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  "}, {"range": {"start": {"line": 41, "character": 15}, "end": {"line": 41, "character": 15}}, "newText": " = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 41, "character": 16}, "end": {"line": 42, "character": 0}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 463, "result": {"isIncomplete": false, "items": [{"label": "codecs", "kind": 9, "sortText": "v00", "filterText": "codecs", "insertText": "codecs", "insertTextFormat": 1}, {"label": "decoder", "kind": 9, "sortText": "v01", "filterText": "decoder", "insertText": "decoder", "insertTextFormat": 1}, {"label": "detect_encoding", "kind": 3, "sortText": "v02", "filterText": "detect_encoding", "insertText": "detect_encoding(${1:b})$0", "insertTextFormat": 2}, {"label": "dump", "kind": 3, "sortText": "v03", "filterText": "dump", "insertText": "dump(${1:obj}, ${2:fp})$0", "insertTextFormat": 2}, {"label": "dumps", "kind": 3, "sortText": "v04", "filterText": "dumps", "insertText": "dumps(${1:obj})$0", "insertTextFormat": 2}, {"label": "encoder", "kind": 9, "sortText": "v05", "filterText": "encoder", "insertText": "encoder", "insertTextFormat": 1}, {"label": "JSONDecodeError", "kind": 7, "sortText": "v06", "filterText": "JSONDecodeError", "insertText": "JSONDecodeError(${1:msg}, ${2:doc}, ${3:pos})$0", "insertTextFormat": 2}, {"label": "JSONDecoder", "kind": 7, "sortText": "v07", "filterText": "JSONDecoder", "insertText": "JSONDecoder($0)", "insertTextFormat": 2}, {"label": "JSONEncoder", "kind": 7, "sortText": "v08", "filterText": "JSONEncoder", "insertText": "JSONEncoder($0)", "insertTextFormat": 2}, {"label": "load", "kind": 3, "sortText": "v09", "filterText": "load", "insertText": "load(${1:fp})$0", "insertTextFormat": 2}, {"label": "loads", "kind": 3, "sortText": "v10", "filterText": "loads", "insertText": "loads(${1:s})$0", "insertTextFormat": 2}, {"label": "scanner", "kind": 9, "sortText": "v11", "filterText": "scanner", "insertText": "scanner", "insertTextFormat": 1}, {"label": "tool", "kind": 9, "sortText": "v12", "filterText": "tool", "insertText": "tool", "insertTextFormat": 1}, {"label": "_default_decoder", "kind": 6, "sortText": "w13", "filterText": "_default_decoder", "insertText": "_default_decoder", "insertTextFormat": 1}, {"label": "_default_encoder", "kind": 6, "sortText": "w14", "filterText": "_default_encoder", "insertText": "_default_encoder", "insertTextFormat": 1}, {"label": "__all__", "kind": 6, "sortText": "y15", "filterText": "__all__", "insertText": "__all__", "insertTextFormat": 1}, {"label": "__author__", "kind": 6, "sortText": "y16", "filterText": "__author__", "insertText": "__author__", "insertTextFormat": 1}, {"label": "__doc__", "kind": 6, "sortText": "y17", "filterText": "__doc__", "insertText": "__doc__", "insertTextFormat": 1}, {"label": "__file__", "kind": 6, "sortText": "y18", "filterText": "__file__", "insertText": "__file__", "insertTextFormat": 1}, {"label": "__name__", "kind": 6, "sortText": "y19", "filterText": "__name__", "insertText": "__name__", "insertTextFormat": 1}, {"label": "__package__", "kind": 6, "sortText": "y20", "filterText": "__package__", "insertText": "__package__", "insertTextFormat": 1}, {"label": "__version__", "kind": 6, "sortText": "y21", "filterText": "__version__", "insertText": "__version__", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 464, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 283}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 2}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  "}, {"range": {"start": {"line": 41, "character": 20}, "end": {"line": 41, "character": 20}}, "newText": " = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 465, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 20}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 466, "result": {"signatures": [{"label": "def load(fp: _Reader, cls: Optional[Type[JSONDecoder]]=..., object_hook: Optional[Callable[[Dict[Any, Any]], Any]]=..., parse_float: Optional[Callable[[str], Any]]=..., parse_int: Optional[Callable[[str], Any]]=..., parse_constant: Optional[Callable[[str], Any]]=..., object_pairs_hook: Optional[Callable[[List[Tuple[Any, Any]]], Any]]=..., **kwds: Any) -> Any", "documentation": {"kind": "markdown", "value": "```text\nDeserialize ``fp`` (a ``.read()``-supporting file-like object containing\na JSON document) to a Python object.\n\n``object_hook`` is an optional function that will be called with the\nresult of any object literal decode (a ``dict``). The return value of\n``object_hook`` will be used instead of the ``dict``. This feature\ncan be used to implement custom decoders (e.g. JSON-RPC class hinting).\n\n``object_pairs_hook`` is an optional function that will be called with the\nresult of any object literal decoded with an ordered list of pairs.  The\nreturn value of ``object_pairs_hook`` will be used instead of the ``dict``.\nThis feature can be used to implement custom decoders.  If ``object_hook``\nis also defined, the ``object_pairs_hook`` takes priority.\n\nTo use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\nkwarg; otherwise ``JSONDecoder`` is used.\n```"}, "parameters": [{"label": "fp: _Reader"}, {"label": "cls: Optional[Type[JSONDecoder]]=..."}, {"label": "object_hook: Optional[Callable[[Dict[Any, Any]], Any]]=..."}, {"label": "parse_float: Optional[Callable[[str], Any]]=..."}, {"label": "parse_int: Optional[Callable[[str], Any]]=..."}, {"label": "parse_constant: Optional[Callable[[str], Any]]=..."}, {"label": "object_pairs_hook: Optional[Callable[[List[Tuple[Any, Any]]], Any]]=..."}, {"label": "**kwds: Any"}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 467, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 468, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load()", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 22}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load()", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 469, "result": {"signatures": [{"label": "def load(fp: _Reader, cls: Optional[Type[JSONDecoder]]=..., object_hook: Optional[Callable[[Dict[Any, Any]], Any]]=..., parse_float: Optional[Callable[[str], Any]]=..., parse_int: Optional[Callable[[str], Any]]=..., parse_constant: Optional[Callable[[str], Any]]=..., object_pairs_hook: Optional[Callable[[List[Tuple[Any, Any]]], Any]]=..., **kwds: Any) -> Any", "documentation": {"kind": "markdown", "value": "```text\nDeserialize ``fp`` (a ``.read()``-supporting file-like object containing\na JSON document) to a Python object.\n\n``object_hook`` is an optional function that will be called with the\nresult of any object literal decode (a ``dict``). The return value of\n``object_hook`` will be used instead of the ``dict``. This feature\ncan be used to implement custom decoders (e.g. JSON-RPC class hinting).\n\n``object_pairs_hook`` is an optional function that will be called with the\nresult of any object literal decoded with an ordered list of pairs.  The\nreturn value of ``object_pairs_hook`` will be used instead of the ``dict``.\nThis feature can be used to implement custom decoders.  If ``object_hook``\nis also defined, the ``object_pairs_hook`` takes priority.\n\nTo use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\nkwarg; otherwise ``JSONDecoder`` is used.\n```"}, "parameters": [{"label": "fp: _Reader"}, {"label": "cls: Optional[Type[JSONDecoder]]=..."}, {"label": "object_hook: Optional[Callable[[Dict[Any, Any]], Any]]=..."}, {"label": "parse_float: Optional[Callable[[str], Any]]=..."}, {"label": "parse_int: Optional[Callable[[str], Any]]=..."}, {"label": "parse_constant: Optional[Callable[[str], Any]]=..."}, {"label": "object_pairs_hook: Optional[Callable[[List[Tuple[Any, Any]]], Any]]=..."}, {"label": "**kwds: Any"}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 470, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 471, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 472, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 473, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 45, "character": 0}, "end": {"line": 46, "character": 44}}, "selectionRange": {"start": {"line": 45, "character": 4}, "end": {"line": 45, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 50, "character": 0}, "end": {"line": 51, "character": 44}}, "selectionRange": {"start": {"line": 50, "character": 4}, "end": {"line": 50, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 55, "character": 0}, "end": {"line": 58, "character": 12}}, "selectionRange": {"start": {"line": 55, "character": 4}, "end": {"line": 55, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 62, "character": 0}, "end": {"line": 64, "character": 35}}, "selectionRange": {"start": {"line": 62, "character": 4}, "end": {"line": 62, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 68, "character": 0}, "end": {"line": 71, "character": 24}}, "selectionRange": {"start": {"line": 68, "character": 4}, "end": {"line": 68, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 474, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 42, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 475, "result": {"isIncomplete": false, "items": [{"label": "pass", "kind": 14, "sortText": "v0", "filterText": "pass", "insertText": "pass", "insertTextFormat": 1}, {"label": "PendingDeprecationWarning", "kind": 7, "sortText": "v1", "filterText": "PendingDeprecationWarning", "insertText": "PendingDeprecationWarning($0)", "insertTextFormat": 2}, {"label": "PermissionError", "kind": 7, "sortText": "v2", "filterText": "PermissionError", "insertText": "PermissionError($0)", "insertTextFormat": 2}, {"label": "pow", "kind": 3, "sortText": "v3", "filterText": "pow", "insertText": "pow(${1:x}, ${2:y})$0", "insertTextFormat": 2}, {"label": "print", "kind": 3, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}, {"label": "ProcessLookupError", "kind": 7, "sortText": "v5", "filterText": "ProcessLookupError", "insertText": "ProcessLookupError($0)", "insertTextFormat": 2}, {"label": "property", "kind": 7, "sortText": "v6", "filterText": "property", "insertText": "property($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 476, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 477, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 478, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 479, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 291}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 6}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  prin = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 480, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) prin", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 481, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 292}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 7}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  print = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 482, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 483, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 484, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 485, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print()", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 486, "result": {"isIncomplete": false, "items": [{"label": ".git/", "kind": 17, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}, {"label": ".github/", "kind": 17, "sortText": "v01", "filterText": ".github/", "insertText": ".github/", "insertTextFormat": 1}, {"label": ".gitignore", "kind": 17, "sortText": "v02", "filterText": ".gitignore", "insertText": ".gitignore", "insertTextFormat": 1}, {"label": ".vscode/", "kind": 17, "sortText": "v03", "filterText": ".vscode/", "insertText": ".vscode/", "insertTextFormat": 1}, {"label": "LICENSE", "kind": 17, "sortText": "v04", "filterText": "LICENSE", "insertText": "LICENSE", "insertTextFormat": 1}, {"label": "README.md", "kind": 17, "sortText": "v05", "filterText": "README.md", "insertText": "README.md", "insertTextFormat": 1}, {"label": "app.py", "kind": 17, "sortText": "v06", "filterText": "app.py", "insertText": "app.py", "insertTextFormat": 1}, {"label": "app.sh", "kind": 17, "sortText": "v07", "filterText": "app.sh", "insertText": "app.sh", "insertTextFormat": 1}, {"label": "example.html", "kind": 17, "sortText": "v08", "filterText": "example.html", "insertText": "example.html", "insertTextFormat": 1}, {"label": "forms/", "kind": 17, "sortText": "v09", "filterText": "forms/", "insertText": "forms/", "insertTextFormat": 1}, {"label": "index.html", "kind": 17, "sortText": "v10", "filterText": "index.html", "insertText": "index.html", "insertTextFormat": 1}, {"label": "package.json", "kind": 17, "sortText": "v11", "filterText": "package.json", "insertText": "package.json", "insertTextFormat": 1}, {"label": "playground/", "kind": 17, "sortText": "v12", "filterText": "playground/", "insertText": "playground/", "insertTextFormat": 1}, {"label": "requirements.txt", "kind": 17, "sortText": "v13", "filterText": "requirements.txt", "insertText": "requirements.txt", "insertTextFormat": 1}, {"label": "stash/", "kind": 17, "sortText": "v14", "filterText": "stash/", "insertText": "stash/", "insertTextFormat": 1}, {"label": "static/", "kind": 17, "sortText": "v15", "filterText": "static/", "insertText": "static/", "insertTextFormat": 1}, {"label": "templates/", "kind": 17, "sortText": "v16", "filterText": "templates/", "insertText": "templates/", "insertTextFormat": 1}, {"label": "tests/", "kind": 17, "sortText": "v17", "filterText": "tests/", "insertText": "tests/", "insertTextFormat": 1}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 487, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 488, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 294}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 10}, "end": {"line": 42, "character": 10}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 294}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 10}, "end": {"line": 42, "character": 10}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 489, "result": {"label": ".git/", "kind": 17, "detail": "path .git/", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": ".git/", "insertText": ".git/", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 490, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"\")", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 491, "result": {"label": "LICENSE", "kind": 17, "detail": "path LICENSE", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v04", "filterText": "LICENSE", "insertText": "LICENSE", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 492, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 493, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 494, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 495, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 496, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 299}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 15}, "end": {"line": 42, "character": 15}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 299}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 15}, "end": {"line": 42, "character": 15}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 497, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 498, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 300}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 16}, "end": {"line": 42, "character": 16}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 300}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 16}, "end": {"line": 42, "character": 16}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 499, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 500, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 301}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 17}, "end": {"line": 42, "character": 17}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 301}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 17}, "end": {"line": 42, "character": 17}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 501, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 502, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 503, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 504, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 505, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 506, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 307}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 23}, "end": {"line": 42, "character": 23}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 307}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 23}, "end": {"line": 42, "character": 23}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 507, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema\")", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 508, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 509, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 308}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "jls_extract_var = "}, {"range": {"start": {"line": 42, "character": 24}, "end": {"line": 42, "character": 24}}, "newText": "\n  print(jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 308}, "edits": [{"range": {"start": {"line": 42, "character": 2}, "end": {"line": 42, "character": 8}}, "newText": "def jls_extract_def():\n      return "}, {"range": {"start": {"line": 42, "character": 24}, "end": {"line": 42, "character": 24}}, "newText": "\n\n\n  print(jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 510, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\")", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 46, "character": 0}, "end": {"line": 47, "character": 44}}, "selectionRange": {"start": {"line": 46, "character": 4}, "end": {"line": 46, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 51, "character": 0}, "end": {"line": 52, "character": 44}}, "selectionRange": {"start": {"line": 51, "character": 4}, "end": {"line": 51, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 56, "character": 0}, "end": {"line": 59, "character": 12}}, "selectionRange": {"start": {"line": 56, "character": 4}, "end": {"line": 56, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 63, "character": 0}, "end": {"line": 65, "character": 35}}, "selectionRange": {"start": {"line": 63, "character": 4}, "end": {"line": 63, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 69, "character": 0}, "end": {"line": 72, "character": 24}}, "selectionRange": {"start": {"line": 69, "character": 4}, "end": {"line": 69, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 511, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 512, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 513, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 514, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 43, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\")", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 53, "character": 44}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 57, "character": 0}, "end": {"line": 60, "character": 12}}, "selectionRange": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 66, "character": 35}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 70, "character": 0}, "end": {"line": 73, "character": 24}}, "selectionRange": {"start": {"line": 70, "character": 4}, "end": {"line": 70, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 515, "result": {"isIncomplete": false, "items": [{"label": "pass", "kind": 14, "sortText": "v0", "filterText": "pass", "insertText": "pass", "insertTextFormat": 1}, {"label": "PendingDeprecationWarning", "kind": 7, "sortText": "v1", "filterText": "PendingDeprecationWarning", "insertText": "PendingDeprecationWarning($0)", "insertTextFormat": 2}, {"label": "PermissionError", "kind": 7, "sortText": "v2", "filterText": "PermissionError", "insertText": "PermissionError($0)", "insertTextFormat": 2}, {"label": "pow", "kind": 3, "sortText": "v3", "filterText": "pow", "insertText": "pow(${1:x}, ${2:y})$0", "insertTextFormat": 2}, {"label": "print", "kind": 3, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}, {"label": "ProcessLookupError", "kind": 7, "sortText": "v5", "filterText": "ProcessLookupError", "insertText": "ProcessLookupError($0)", "insertTextFormat": 2}, {"label": "property", "kind": 7, "sortText": "v6", "filterText": "property", "insertText": "property($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 516, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 517, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 518, "result": {"label": "print", "kind": 3, "detail": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "sortText": "v4", "filterText": "print", "insertText": "print($0)", "insertTextFormat": 2}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 519, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 314}, "edits": [{"range": {"start": {"line": 43, "character": 2}, "end": {"line": 43, "character": 7}}, "newText": "def jls_extract_def():\n      \n      return \n\n\n  print = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 520, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 44, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\") print", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 53, "character": 44}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 57, "character": 0}, "end": {"line": 60, "character": 12}}, "selectionRange": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 66, "character": 35}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 70, "character": 0}, "end": {"line": 73, "character": 24}}, "selectionRange": {"start": {"line": 70, "character": 4}, "end": {"line": 70, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 521, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 522, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 523, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 44, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\") print()", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 53, "character": 44}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 57, "character": 0}, "end": {"line": 60, "character": 12}}, "selectionRange": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 66, "character": 35}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 70, "character": 0}, "end": {"line": 73, "character": 24}}, "selectionRange": {"start": {"line": 70, "character": 4}, "end": {"line": 70, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 524, "result": {"isIncomplete": false, "items": [{"label": "schema", "kind": 6, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}, {"label": "sep=", "kind": 6, "sortText": "a01", "filterText": "sep=", "insertText": "sep=", "insertTextFormat": 1}, {"label": "set", "kind": 7, "sortText": "v02", "filterText": "set", "insertText": "set($0)", "insertTextFormat": 2}, {"label": "setattr", "kind": 3, "sortText": "v03", "filterText": "setattr", "insertText": "setattr(${1:object}, ${2:name}, ${3:value})$0", "insertTextFormat": 2}, {"label": "slice", "kind": 7, "sortText": "v04", "filterText": "slice", "insertText": "slice(${1:stop})$0", "insertTextFormat": 2}, {"label": "sorted", "kind": 3, "sortText": "v05", "filterText": "sorted", "insertText": "sorted(${1:iterable})$0", "insertTextFormat": 2}, {"label": "staticmethod", "kind": 7, "sortText": "v06", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}, {"label": "StopAsyncIteration", "kind": 7, "sortText": "v07", "filterText": "StopAsyncIteration", "insertText": "StopAsyncIteration($0)", "insertTextFormat": 2}, {"label": "StopIteration", "kind": 7, "sortText": "v08", "filterText": "StopIteration", "insertText": "StopIteration($0)", "insertTextFormat": 2}, {"label": "str", "kind": 7, "sortText": "v09", "filterText": "str", "insertText": "str($0)", "insertTextFormat": 2}, {"label": "subprocess", "kind": 9, "sortText": "v10", "filterText": "subprocess", "insertText": "subprocess", "insertTextFormat": 1}, {"label": "sum", "kind": 3, "sortText": "v11", "filterText": "sum", "insertText": "sum(${1:iterable})$0", "insertTextFormat": 2}, {"label": "super", "kind": 7, "sortText": "v12", "filterText": "super", "insertText": "super(${1:t}, ${2:obj})$0", "insertTextFormat": 2}, {"label": "SyntaxError", "kind": 7, "sortText": "v13", "filterText": "SyntaxError", "insertText": "SyntaxError($0)", "insertTextFormat": 2}, {"label": "SyntaxWarning", "kind": 7, "sortText": "v14", "filterText": "SyntaxWarning", "insertText": "SyntaxWarning($0)", "insertTextFormat": 2}, {"label": "SystemError", "kind": 7, "sortText": "v15", "filterText": "SystemError", "insertText": "SystemError($0)", "insertTextFormat": 2}, {"label": "SystemExit", "kind": 7, "sortText": "v16", "filterText": "SystemExit", "insertText": "SystemExit($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 525, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 526, "result": {"label": "schema", "kind": 6, "detail": "schema = json.load(f)", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 527, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 528, "result": {"label": "schema", "kind": 6, "detail": "schema = json.load(f)", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 529, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 530, "result": {"label": "schema", "kind": 6, "detail": "schema = json.load(f)", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 531, "result": {"label": "schema", "kind": 6, "detail": "schema = json.load(f)", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 532, "result": {"signatures": [{"label": "def print(*values: object, sep: Optional[Text]=..., end: Optional[Text]=..., file: Optional[_Writer]=..., flush: bool=...) -> None", "documentation": {"kind": "markdown", "value": "```text\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile:  a file-like object (stream); defaults to the current sys.stdout.\nsep:   string inserted between values, default a space.\nend:   string appended after the last value, default a newline.\nflush: whether to forcibly flush the stream.\n```"}, "parameters": [{"label": "*values: object"}, {"label": "sep: Optional[Text]=..."}, {"label": "end: Optional[Text]=..."}, {"label": "file: Optional[_Writer]=..."}, {"label": "flush: bool=..."}]}], "activeSignature": 0, "activeParameter": 0}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 533, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 321}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 42, "character": 2}}, "newText": ""}, {"range": {"start": {"line": 43, "character": 8}, "end": {"line": 43, "character": 14}}, "newText": "json.load(f)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 534, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 44, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\") print(schema)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 44}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 53, "character": 44}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 57, "character": 0}, "end": {"line": 60, "character": 12}}, "selectionRange": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 66, "character": 35}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 70, "character": 0}, "end": {"line": 73, "character": 24}}, "selectionRange": {"start": {"line": 70, "character": 4}, "end": {"line": 70, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 535, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 536, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 537, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 538, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 539, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 540, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 541, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 542, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 543, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 544, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 545, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 546, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 547, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 548, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 549, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 550, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 551, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 552, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 329}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 42, "character": 2}}, "newText": ""}, {"range": {"start": {"line": 43, "character": 8}, "end": {"line": 43, "character": 14}}, "newText": "json.load(f)"}, {"range": {"start": {"line": 48, "character": 45}, "end": {"line": 48, "character": 51}}, "newText": "json.load(f)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": [{"range": {"start": {"line": 48, "character": 52}, "end": {"line": 48, "character": 53}}, "message": "SyntaxError: invalid syntax", "severity": 1, "source": "jedi"}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 553, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 554, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 555, "result": {"isIncomplete": false, "items": [{"label": "schema", "kind": 6, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}, {"label": "set", "kind": 7, "sortText": "v01", "filterText": "set", "insertText": "set($0)", "insertTextFormat": 2}, {"label": "setattr", "kind": 3, "sortText": "v02", "filterText": "setattr", "insertText": "setattr(${1:object}, ${2:name}, ${3:value})$0", "insertTextFormat": 2}, {"label": "slice", "kind": 7, "sortText": "v03", "filterText": "slice", "insertText": "slice(${1:stop})$0", "insertTextFormat": 2}, {"label": "sorted", "kind": 3, "sortText": "v04", "filterText": "sorted", "insertText": "sorted(${1:iterable})$0", "insertTextFormat": 2}, {"label": "staticmethod", "kind": 7, "sortText": "v05", "filterText": "staticmethod", "insertText": "staticmethod(${1:f})$0", "insertTextFormat": 2}, {"label": "StopAsyncIteration", "kind": 7, "sortText": "v06", "filterText": "StopAsyncIteration", "insertText": "StopAsyncIteration($0)", "insertTextFormat": 2}, {"label": "StopIteration", "kind": 7, "sortText": "v07", "filterText": "StopIteration", "insertText": "StopIteration($0)", "insertTextFormat": 2}, {"label": "str", "kind": 7, "sortText": "v08", "filterText": "str", "insertText": "str($0)", "insertTextFormat": 2}, {"label": "submit", "kind": 3, "sortText": "v09", "filterText": "submit", "insertText": "submit()$0", "insertTextFormat": 2}, {"label": "subprocess", "kind": 9, "sortText": "v10", "filterText": "subprocess", "insertText": "subprocess", "insertTextFormat": 1}, {"label": "sum", "kind": 3, "sortText": "v11", "filterText": "sum", "insertText": "sum(${1:iterable})$0", "insertTextFormat": 2}, {"label": "super", "kind": 7, "sortText": "v12", "filterText": "super", "insertText": "super(${1:t}, ${2:obj})$0", "insertTextFormat": 2}, {"label": "SyntaxError", "kind": 7, "sortText": "v13", "filterText": "SyntaxError", "insertText": "SyntaxError($0)", "insertTextFormat": 2}, {"label": "SyntaxWarning", "kind": 7, "sortText": "v14", "filterText": "SyntaxWarning", "insertText": "SyntaxWarning($0)", "insertTextFormat": 2}, {"label": "SystemError", "kind": 7, "sortText": "v15", "filterText": "SystemError", "insertText": "SystemError($0)", "insertTextFormat": 2}, {"label": "SystemExit", "kind": 7, "sortText": "v16", "filterText": "SystemExit", "insertText": "SystemExit($0)", "insertTextFormat": 2}]}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 556, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 557, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 558, "result": {"label": "schema", "kind": 6, "detail": "schema = json.load(f)", "documentation": {"kind": "markdown", "value": ""}, "sortText": "v00", "filterText": "schema", "insertText": "schema", "insertTextFormat": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 559, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 560, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 561, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 562, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 563, "result": {"signatures": [{"label": "def render_template(template_name_or_list: Union[Text, Iterable[Text]], **context: Any) -> Text", "documentation": {"kind": "markdown", "value": "```text\nRenders a template from the template folder with the given\ncontext.\n\n:param template_name_or_list: the name of the template to be\n                              rendered, or an iterable with template names\n                              the first one existing will be rendered\n:param context: the variables that should be available in the\n                context of the template.\n```"}, "parameters": [{"label": "template_name_or_list: Union[Text, Iterable[Text]]"}, {"label": "**context: Any"}]}], "activeSignature": 0, "activeParameter": 1}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 564, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///mnt/code/app.py", "version": 336}, "edits": [{"range": {"start": {"line": 41, "character": 2}, "end": {"line": 42, "character": 2}}, "newText": ""}, {"range": {"start": {"line": 43, "character": 8}, "end": {"line": 43, "character": 14}}, "newText": "json.load(f)"}, {"range": {"start": {"line": 48, "character": 52}, "end": {"line": 48, "character": 58}}, "newText": "json.load(f)"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 565, "result": [{"name": "subprocess", "kind": 2, "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 17}}, "selectionRange": {"start": {"line": 0, "character": 7}, "end": {"line": 0, "character": 17}}, "detail": "module subprocess", "children": []}, {"name": "json", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 11}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 11}}, "detail": "module json", "children": []}, {"name": "flask", "kind": 2, "range": {"start": {"line": 7, "character": 0}, "end": {"line": 7, "character": 12}}, "selectionRange": {"start": {"line": 7, "character": 7}, "end": {"line": 7, "character": 12}}, "detail": "module flask", "children": []}, {"name": "request", "kind": 13, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 18}, "end": {"line": 8, "character": 25}}, "detail": "instance request", "children": []}, {"name": "redirect", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 27}, "end": {"line": 8, "character": 35}}, "detail": "def redirect", "children": []}, {"name": "url_for", "kind": 12, "range": {"start": {"line": 8, "character": 0}, "end": {"line": 8, "character": 44}}, "selectionRange": {"start": {"line": 8, "character": 37}, "end": {"line": 8, "character": 44}}, "detail": "def url_for", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 9, "character": 0}, "end": {"line": 9, "character": 18}}, "selectionRange": {"start": {"line": 9, "character": 16}, "end": {"line": 9, "character": 18}}, "detail": "module np", "children": []}, {"name": "ReverseProxied", "kind": 5, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 11, "character": 6}, "end": {"line": 11, "character": 20}}, "detail": "class ReverseProxied", "children": [{"name": "__init__", "kind": 6, "range": {"start": {"line": 12, "character": 2}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 12, "character": 6}, "end": {"line": 12, "character": 14}}, "detail": "def __init__", "children": [{"name": "app", "kind": 7, "range": {"start": {"line": 13, "character": 6}, "end": {"line": 13, "character": 20}}, "selectionRange": {"start": {"line": 13, "character": 11}, "end": {"line": 13, "character": 14}}, "detail": "self.app = app", "children": []}]}, {"name": "__call__", "kind": 6, "range": {"start": {"line": 14, "character": 2}, "end": {"line": 30, "character": 46}}, "selectionRange": {"start": {"line": 14, "character": 6}, "end": {"line": 14, "character": 14}}, "detail": "def __call__", "children": []}]}, {"name": "app", "kind": 13, "range": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 27}}, "selectionRange": {"start": {"line": 32, "character": 0}, "end": {"line": 32, "character": 3}}, "detail": "app = flask.Flask(__name__)", "children": []}, {"name": "wsgi_app", "kind": 13, "range": {"start": {"line": 33, "character": 0}, "end": {"line": 33, "character": 43}}, "selectionRange": {"start": {"line": 33, "character": 4}, "end": {"line": 33, "character": 12}}, "detail": "app.wsgi_app = ReverseProxied(app.wsgi_app)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 40, "character": 0}, "end": {"line": 44, "character": 0}}, "selectionRange": {"start": {"line": 40, "character": 41}, "end": {"line": 40, "character": 42}}, "detail": "with open('forms/titles.schema.json') as f: schema = json.load(f) print(\"Loadsd schema:\") print(schema)", "children": []}, {"name": "schema", "kind": 13, "range": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 23}}, "selectionRange": {"start": {"line": 41, "character": 2}, "end": {"line": 41, "character": 8}}, "detail": "schema = json.load(f)", "children": []}, {"name": "index_page", "kind": 12, "range": {"start": {"line": 47, "character": 0}, "end": {"line": 48, "character": 59}}, "selectionRange": {"start": {"line": 47, "character": 4}, "end": {"line": 47, "character": 14}}, "detail": "def index_page", "children": []}, {"name": "redirect_test", "kind": 12, "range": {"start": {"line": 52, "character": 0}, "end": {"line": 53, "character": 44}}, "selectionRange": {"start": {"line": 52, "character": 4}, "end": {"line": 52, "character": 17}}, "detail": "def redirect_test", "children": []}, {"name": "another_page", "kind": 12, "range": {"start": {"line": 57, "character": 0}, "end": {"line": 60, "character": 12}}, "selectionRange": {"start": {"line": 57, "character": 4}, "end": {"line": 57, "character": 16}}, "detail": "def another_page", "children": []}, {"name": "random", "kind": 12, "range": {"start": {"line": 64, "character": 0}, "end": {"line": 66, "character": 35}}, "selectionRange": {"start": {"line": 64, "character": 4}, "end": {"line": 64, "character": 10}}, "detail": "def random", "children": []}, {"name": "submit", "kind": 12, "range": {"start": {"line": 70, "character": 0}, "end": {"line": 73, "character": 24}}, "selectionRange": {"start": {"line": 70, "character": 4}, "end": {"line": 70, "character": 10}}, "detail": "def submit", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 566, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///mnt/code/app.py", "diagnostics": []}}
